name: Build and Package

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run unit tests
        run: |
          python -m unittest discover -s . -p "test_*.py"
  build-windows:
    needs: test
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build exe with PyInstaller
        run: |
          pyinstaller --noconfirm --onefile --windowed main.py --name MySQLAddSchema
      - name: Upload exe artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/MySQLAddSchema.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build Mac App Bundle
        run: |
          pyinstaller --noconfirm --windowed main.py --name MySQLAddSchema
      - name: Create .dmg file
        run: |
          mkdir -p build_dmg
          cp -R dist/MySQLAddSchema.app build_dmg/
          hdiutil create -volname "MySQLAddSchema" \
            -srcfolder "build_dmg" \
            -ov -format UDZO MySQLAddSchema.dmg
      - name: Upload DMG
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: MySQLAddSchema.dmg


  create-release:
    needs: [ build-windows, build-macos ]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      - name: Debug file structure
        run: |
          ls -R
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag }}
          name: Release ${{ github.event.inputs.tag }}
          files: |
            windows-build/*
            macos-build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}